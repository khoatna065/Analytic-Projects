/* --------------------
   Case Study Questions
   --------------------*/

-- 1. What is the total amount each customer spent at the restaurant?
-- 2. How many days has each customer visited the restaurant?
-- 3. What was the first item from the menu purchased by each customer?
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
-- 5. Which item was the most popular for each customer?
-- 6. Which item was purchased first by the customer after they became a member?
-- 7. Which item was purchased just before the customer became a member?
-- 8. What is the total items and amount spent for each member before they became a member?
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

-- Question 1
select
	s.customer_id,
    sum(m.price) as total_spent
from dannys_diner.sales s
join dannys_diner.menu m
	on s.product_id = m.product_id
group by customer_id
order by total_spent desc;

--Question 2
select 
	customer_id,
    count(distinct(order_date)) as days_visited
from dannys_diner.sales
group by customer_id
order by days_visited desc;

--Question 3
select
	s.customer_id,
    s.order_date,
    m.product_name
from dannys_diner.sales s
join dannys_diner.menu m
	on s.product_id = m.product_id
where s.order_date in (select min(order_date)
                       from dannys_diner.sales
                       group by customer_id);
                       
--Question 4
select
	s.product_id,
    m.product_name,
    count(*) as most_item
from dannys_diner.sales s
join dannys_diner.menu m
	on s.product_id = m.product_id
group by s.product_id, m.product_name
order by most_item desc
limit 1;

--Question 5
with rnk as (
select
	s.customer_id,
    m.product_name,
    rank() over (partition by s.customer_id order by count(*) desc)  as rk
from dannys_diner.sales s
join dannys_diner.menu m
	on s.product_id = m.product_id
group by s.customer_id, m.product_name
)
select 
	customer_id,
    product_name
from rnk
where rk = 1;

--Which item was purchased first by the customer after they became a member?
with cte as (
select 
	s.customer_id,
    m.product_name,
    s.order_date,
    row_number() over (partition by s.customer_id order by s.order_date) rn
from dannys_diner.sales s
join dannys_diner.members mb
	on s.customer_id = mb.customer_id
join dannys_diner.menu m
	on s.product_id = m.product_id 
where s.order_date >= mb.join_date
)
select 
	customer_id,
    product_name,
   	order_date
from cte 
where rn = 1;

--Which item was purchased just before the customer became a member?
with cte as (
select
	s.customer_id,
    m.product_name,
    s.order_date,
    row_number() over(partition by s.customer_id order by s.order_date desc) rn
from dannys_diner.sales s
join dannys_diner.menu m
	on s.product_id = m.product_id
join dannys_diner.members mb
	on s.customer_id = mb.customer_id
where s.order_date < mb.join_date
)
select 	
	customer_id,
    product_name,
    order_date
from cte 
where rn = 1;

--What is the total items and amount spent for each member before they became a member?
select
	s.customer_id,
    count(s.product_id) as total_item,
    sum(m.price) as total_spent
from dannys_diner.sales s
join dannys_diner.members mb
	on s.customer_id = mb.customer_id
join dannys_diner.menu m
    on s.product_id = m.product_id
where s.order_date < mb.join_date
group by s.customer_id;

--If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
select
	s.customer_id,
    sum(case 
    		when m.product_name = 'sushi' then price*20 else price*10
    	end) as total_points
from dannys_diner.sales s
join dannys_diner.menu m
	on s.product_id = m.product_id
group by s.customer_id
order by total_points desc;

--In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
select
	s.customer_id,
    sum(case 
    		when m.product_name = 'sushi' then m.price*20
    		when s.order_date between mb.join_date and mb.join_date + interval '6 days' then m.price*20 
        	else m.price*10 
    	end) as total_points
from dannys_diner.sales s
join dannys_diner.members mb
	on s.customer_id = mb.customer_id
join dannys_diner.menu m
	on s.product_id = m.product_id
where s.order_date <= date_trunc('month',s.order_date)+ interval '1 month' - interval '1 day'
group by 1;

--Bonus question
--Join all the things
select
	s.customer_id,
    s.order_date,
    m.product_name,
    m.price,
    case when s.order_date >= mb.join_date then 'Y' else 'N' end as member
from dannys_diner.sales s
join dannys_diner.members mb
	on s.customer_id = mb.customer_id
join dannys_diner.menu m 
	on s.product_id = m.product_id
order by 1,2;

--rank all things
with cte as (
select
	s.customer_id,
    s.order_date,
    m.product_name,
    m.price,
    case when s.order_date >= mb.join_date then 'Y' else 'N' end as member
from dannys_diner.sales s
join dannys_diner.members mb
	on s.customer_id = mb.customer_id
join dannys_diner.menu m
	on s.product_id = m.product_id
order by 1,2
)
select 
	*,
    case when member ='Y' then rank() over (partition by customer_id, member order by order_date)
    	else null end as ranking
from cte;
